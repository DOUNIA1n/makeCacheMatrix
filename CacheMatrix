# Function to create a special "matrix" object that caches its inverse
makeCacheMatrix <- function(matrix = matrix()) {
  # Initialize the inverse matrix cache
  inverse <- NULL
  
  # Function to set the matrix and clear the cache
  set <- function(matrix_input) {
    matrix <<- matrix_input
    inverse <<- NULL
  }
  
  # Function to get the matrix
  get <- function() {
    matrix
  }
  
  # Function to compute the inverse and cache it
  cacheSolve <- function() {
    if (!is.null(inverse)) {
      message("Getting cached inverse")
      return(inverse)
    }
    
    message("Calculating new inverse")
    inverse <- solve(matrix)
    inverse
  }
  
  # Return a list of functions
  list(set = set, get = get, cacheSolve = cacheSolve)
}
